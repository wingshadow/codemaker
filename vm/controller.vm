package ${controllerPackage}.${classLowerName};

import com.dolphin.topup.common.base.BaseBean;
import com.dolphin.topup.common.base.BaseController;

import org.hibernate.validator.constraints.Length;
import org.hibernate.validator.constraints.NotEmpty;
import com.github.pagehelper.PageInfo;

import lombok.extern.slf4j.Slf4j;
import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.util.*;
/**
 * ${className}Controller定义类，对应表${tableName}
 *
 * @author ${author}
 * @version ${version} $createDate 初始创建
 */
@RestController
@RequestMapping("/adminx/${classLowerName}")
@Slf4j
public class ${className}Controller extends BaseController {
    @Resource
    private ${className}Service ${classLowerName}Service;

    @RequestMapping(value = "/list", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ResponseMessage list(@RequestBody ${className}Form ${classLowerName}Form) {

        ${className}DO ${classLowerName}DO = new ${className}DO();
        BeanCopyUtil.copyFormObjectWithIgnoreCase(${classLowerName}Form, ${classLowerName}DO);
        PageInfo<${className}DO> list = ${classLowerName}Service.listByPage(${classLowerName}DO,
        ${classLowerName}Form.getPageNum(),${classLowerName}Form.getPageSize());
        return ResponseMessageUtil.genSuccessResult(list);
    }

    @RequestMapping(value = "/add", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ResponseMessage add(@RequestBody ${className}Form ${classLowerName}Form) {
        ${className}DO ${classLowerName}DO = new ${className}DO();
        BeanCopyUtil.copyFormObjectWithIgnoreCase(${classLowerName}Form, ${classLowerName}DO);
        ${classLowerName}Service.insert(${classLowerName}DO);
        return ResponseMessageUtil.genSuccessResult("新增成功");
    }

    @RequestMapping(value = "/delete", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ResponseMessage delete(@RequestBody ${className}Form ${classLowerName}Form) {
        ${classLowerName}Service.deleteByPrimaryKey(Long.valueOf(${classLowerName}Form.getId()));
        return ResponseMessageUtil.genSuccessResult();
    }

    @RequestMapping(value = "/edit", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
    public ResponseMessage editDic(@RequestBody ${className}Form ${classLowerName}Form) {
        ${className}DO ${classLowerName}DO = new ${className}DO();
        BeanCopyUtil.copyFormObjectWithIgnoreCase(${classLowerName}Form, ${classLowerName}DO);

        if (${classLowerName}DO.getId() == null) {
            return ResponseMessageUtil.genFailResult("ID为空");
        }
        ${classLowerName}Service.updateByPrimaryKeySelective(${classLowerName}DO);
        return ResponseMessageUtil.genSuccessResult("修改成功");
    }
}