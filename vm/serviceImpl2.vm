package ${servicePackageName};

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.util.Assert;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import ${beanPackageName}.${beanClass};
import ${daoPackageName};
import ${serviceItfcPckageName}.${serviceInterfaceName};
import com.hyou.fw.base.BaseService;

/**
 * ${serviceClassName} Service接口实现类
 *
 * @author ${author}
 * @version ${version} $createDate create
 */
public class ${serviceClassName} extends BaseService implements ${serviceInterfaceName} {
    
    private static final Logger log = LoggerFactory.getLogger(${serviceClassName}.class);
    
    @Resource(name = "${daoIocName}")
    private ${daoClassName} ${daoIocName};
    
    @Override
    public Long insert(${beanClass} paramBean) {
        Assert.notNull(paramBean);
        
        Long newId = SeqUtil.getNextKey("${tableName}");
        paramBean.setId(newId);
        ${daoIocName}.insert(paramBean);
        return newId;
    }
    
    @Override
    public void deleteByPK(Long id) {
        Assert.notNull(id);
        
        // 逻辑删除
        ${beanClass} paramBean = new ${beanClass}();
        paramBean.setId(id);
        paramBean.setDisFlag(DisFlag.DISABLE);
        ${daoIocName}.updateByPKSelective(paramBean);
    }
    
    @Override
    public void updateByPKSelective(${beanClass} paramBean) {
        Assert.notNull(paramBean);
        Assert.notNull(paramBean.getId());
        
        ${daoIocName}.updateByPKSelective(paramBean);
    }
    
    @Override
    public ${beanClass} selectByPK(Long id) {
        Assert.notNull(id);
        
        return ${daoIocName}.selectByPK(id);
    }
    
    @Override
    public List<${beanClass}> selectByConditions(${beanClass} paramBean) {
        Assert.notNull(paramBean);
        
        return ${daoIocName}.selectByConditions(paramBean);
    }
    
    @Override
    public PageInfo<${beanClass}View> selectByPage(${beanClass}View paramBean, final int pageNum, final int pageSize) {
        Assert.notNull(paramBean);
        
        PageHelper.startPage(pageNum, pageSize);
        List<${beanClass}View> lst = ${beanClass}ViewDao.selectByConditions(paramBean);
        return new PageInfo<${beanClass}View>(lst);
    }
    
}
