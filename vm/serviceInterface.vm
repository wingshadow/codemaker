package ${iServicePackageName};

import java.util.List;

import com.github.pagehelper.PageInfo;
import ${beanPackageName}.${beanClass};

/**
 * ${serviceInterfaceName} Service接口定义类
 * 
 * @author ${author}
 * @version ${version} $createDate 初始创建
 */
public interface ${serviceInterfaceName} {
    
    /**
     * 新增一条${beanClass}记录
     * 
     * @param paramBean 要新增的${beanClass}记录数据对象
     * @return 新增记录的ID
     */
    Long insert(${beanClass} paramBean);
    
    /**
     * 批量新增${beanClass}记录
     * 
     * @param paramBeans 要新增的${beanClass}记录数据对象集合
     */
    void insertBatch(List<${beanClass}> paramBeans);
    
    /**
     * 根据主键ID，删除一条${beanClass}记录
     * 
     * @param id ${beanClass}的主键
     */
    void deleteByPrimaryKey(Long id);
    
    /**
     * 根据主键ID，批量删除多条${beanClass}记录
     *
     * @param ids ${beanClass}的主键字符串，多个主键用英文逗号分隔
     */
    void deleteBatchByPrimaryKeys(String ids);
    
    /**
     * 根据主键ID，批量删除多条${beanClass}记录
     *
     * @param ids ${beanClass}的主键集合
     */
    void deleteBatchByPrimaryKeys(List<Long> ids);
    
    /**
     * 根据主键更新${beanClass}数据记录
     * 
     * @param paramBean 要更新的${beanClass}数据对象
     */
    void updateByPrimaryKeySelective(${beanClass} paramBean);
    
    /**
     * 根据主键查询${beanClass}数据对象
     * 
     * @param id ${beanClass}的主键
     * @return ${beanClass}数据对象
     */
    ${beanClass} getByPrimaryKey(Long id);
    
    /**
     * 查询符合条件的${beanClass}结果集,根据paramBean动态拼接查询条件。
     * 
     * @param paramBean 用于封装查询条件
     * @return ${beanClass}数据查询结果集
     */
    List<${beanClass}> listByConditions(${beanClass} paramBean);
    
    /**
     * 分页查询符合条件的${beanClass}结果集
     * 
     * @param paramBean 查询条件
     * @param pageNum 查询的页码
     * @param pageSize 每页记录数
     * @return 数据查询结果集
     */
    PageInfo<${beanClass}> listByPage(${beanClass} paramBean, final int pageNum, final int pageSize);
    
}
